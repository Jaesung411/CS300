package P01ClimbingTracker;

public class Test2 {

		public static boolean testSendClimb() {
			final int LEVELS_CAPACITY = 5;
			int zero = 0;
			
			//scenario 1 : empty array
			String[] sendArray1 = new String[LEVELS_CAPACITY];
			int size1 = 0;
			int[] num1 = new int[] {0};
			String grade= null;
			int expected1 = 0;
			
			ClimbingTracker.sendClimb(sendArray1, num1[0], grade);
			if(!(ClimbingTracker.sendClimb(sendArray1, num1[0], grade) == expected1)) {
				System.out.println("faliled test1");
				return false;
			}
			
			//scenario 2 : partially array
			String[] sendArray2 = new String[LEVELS_CAPACITY];
			int size2 = 0;
			int[] num2 = new int[] {1,1,1};
			String[] grade2 = new String[] {"V1","V2","V3"};
			double expected2 = 3;
			
			for(int i = 0; i < grade2.length; i++) {
				ClimbingTracker.sendClimb(sendArray2, num2[i], grade2[i]);
				size2++;
			}
			if(!(ClimbingTracker.sendClimb(sendArray2, zero, grade) == expected2)) {
				System.out.println("faliled test2");
				return false;
			}
			
			//scenario 3 : completely full array
			String[] sendArray3 = new String[LEVELS_CAPACITY];
			int size3 = 0;
			int[] num3 = new int[] {1,1,1,1,1};
			String[] grade3 = new String[] {"V1","V2","V3","V4","V5"};
			double expected3 = 5;
			
			for(int i = 0; i < grade3.length; i++) {
				ClimbingTracker.sendClimb(sendArray3, num3[i], grade3[i]);
				size3++;
			}
			if(!(ClimbingTracker.sendClimb(sendArray3, zero, grade) == expected3)) {
				System.out.println("faliled test3");
				return false;
			}
			
			//scenario 4 : valid and invalid grades
			if(!(grade2[0].charAt(0) == 'V' && grade2[0].length() == 2 && Character.isDigit(grade2[1].charAt(1)))) {
				System.out.println("faliled test4 "+grade2[0].length());
				return false;
			}			

			return true;
		}
		public static boolean testFailClimb() {
			final int LEVELS_CAPACITY = 5;
			int zero = 0;
			
			//scenario 1 : empty array
			String[] failArray1 = new String[LEVELS_CAPACITY];
			int size1 = 0;
			int[] num1 = new int[] {0};
			String grade= null;
			int expected1 = 0;
			
			ClimbingTracker.failClimb(failArray1, num1[0], grade);
			if(!(ClimbingTracker.failClimb(failArray1, num1[0], grade) == expected1)) {
				System.out.println("faliled test1");
				return false;
			}
			
			//scenario 2 : partially array
			String[] failArray2 = new String[LEVELS_CAPACITY];
			int size2 = 0;
			int[] num2 = new int[] {1,2};
			String[] grade2 = new String[] {"V1","V2"};
			double expected2 = 3;
			
			for(int i = 0; i < grade2.length; i++) {
				ClimbingTracker.failClimb(failArray2, num2[i], grade2[i]);
				size2++;
			}
			if(!(ClimbingTracker.failClimb(failArray2, zero, grade) == expected2)) {
				System.out.println("faliled test2");
				return false;
			}
			
			//scenario 3 : completely full array
			String[] failArray3 = new String[LEVELS_CAPACITY];
			int size3 = 0;
			int[] num3 = new int[] {1,1,1,1};
			String[] grade3 = new String[] {"V1","V2","V3","V4"};
			double expected3 = 5;
			
			for(int i = 0; i < grade3.length; i++) {
				ClimbingTracker.failClimb(failArray3, num3[i], grade3[i]);
				size3++;
			}
			if(!(ClimbingTracker.sendClimb(failArray3, zero, grade) == expected3)) {
				System.out.println("faliled test3");
				return false;
			}
			
			//scenario 4 : valid and invalid grades
			if(!(grade2[0].charAt(0) == 'V' && grade2[0].length() == 2 && Character.isDigit(grade2[1].charAt(1)))) {
				System.out.println("faliled test4 "+grade2[0].length());
				return false;
			}			

			return true;
		}
		public static boolean testGetStats(){
			
			final int LEVELS_CAPACITY = 5;
			
			//scenario 1 : a mix of grades
			
			String[] sendArray1 = new String[LEVELS_CAPACITY];
			String[] failArray1 = new String[LEVELS_CAPACITY];
			int sendSize1 = 0;
			int failSize1 = 0;
			int[] sendNum1 = new int[] {1,1,2};
			int[] failNum1 = new int[] {1,1};
			String[] sendGrade1 = new String[] {"V0","V1","V0"};
			String[] failGrade1 = new String[] {"V2","V1"};
			String expected1 = "Send:0 "+"\n"+  "Fail:1.5" ;
			
			for(int i = 0; i < sendGrade1.length; i++) {
				ClimbingTracker.sendClimb(sendArray1, sendNum1[i], sendGrade1[i]);
				sendSize1++;
			}
			for(int i = 0; i < sendGrade1.length; i++) {
				ClimbingTracker.failClimb(failArray1, failNum1[i], failGrade1[i]);
				failSize1++;
			}
			System.out.println(ClimbingTracker.getStats(sendArray1, sendSize1, failArray1, failSize1, 2));
			
			if(!(ClimbingTracker.getStats(sendArray1, sendSize1, failArray1, failSize1, 2)==expected1)) {
				return false;
			}
			
			return true;
		}
		public static boolean testGetHistogram(){
			return true;
		}
		public static boolean runAllTests(){
			if(!(testFailClimb() == true && testSendClimb() == true)) {
				return false;
			}
			if(!(testGetStats() == true)) {
				return false;
			}
		
			return true;
		}
		public static void main(String[] args){
			System.out.print(testSendClimb());
			
		}

	}


