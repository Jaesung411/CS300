

public class ClimbingTracker1 {
	
	private static int helper(String[] array, int num, String grade){

		int levelSize = 0;
		int Size = 0;
		
		if (num == array.length) {
			return num;
		}
		for(int i = 0; i < array.length; i++) {
			if(array[i] == null) {
				break;
			}
			levelSize++;
		}
		for(int i = 0; i < num; i++) {
			array[num+levelSize-1-i] = grade;
		}
		levelSize = levelSize + num;
		++num;

		for(int i = 0; i < array.length; i++) {
			if(array[i] == null){
				break;
			}
			Size++;
		}
		return Size;
	}
	public static int sendClimb(String[] send, int numSend, String grade) {
		return helper(send, numSend, grade);
		
	}
	public static int failClimb(String[] fail, int numFail, String grade) {
		return helper(fail, numFail, grade);
	}
	
	public static String getStats(String[] send, int numSend, String[] fail, int numFail, int historyLength) {
			double sum1 =0.0;
			double sum2 =0.0;

			int n = 0, m = 0;

			if(historyLength > numSend){
			    n = numSend;
			}else{
			    n = historyLength;
			}

			if(historyLength > numFail){
			    m = numFail;
			}else{
			    m = historyLength;
			}	
			
			for(int i = numSend-1; i > numSend-n-1 ; i--) {
				int temp1 = Integer.parseInt(send[i].substring(1));
				sum1 = sum1 + temp1;
				
			}
			for(int i = numFail-1; i > numFail-m-1 ; i--) {
				int temp2 = Integer.parseInt(fail[i].substring(1));
				sum2 = sum2 + temp2;
				
				
			}
			double av1 = sum1/n;
			double av2 = sum2/m;
			if(numSend==0) {
				return "Send: --" +"\n"+"Fail:" +av2;
			}
			if(numFail==0) {
				return "Send: "+ av1 +"\n"+"Fail: --";
			}
			if(historyLength <= 0) {
				return "Send: --" +"\n"+"Fail: --";
			}
			return "Send: "+ av1 +"\n"+"Fail:" +av2;

			
		}
			
//	public static String getHistogram(String[] send,int numSend, String[] fail, int numFail) {
//		
//	}
}
